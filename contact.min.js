(function($,window,document,undefined){"use strict";const pluginName="VaSe",pluginNameLower=pluginName.toLowerCase(),formObjPrefix='vase--',inputAllMask='input, select, textarea',defaults={api:{url:'',custom:[{name:'api_key',value:''},],param:{success:{name:'result',value:'success'},message:'',},},data:{form_method:"post",send_headers:!0,},status:{ajax_processing:!1,response_from_api_visible:!0,},text_vars:{wrong_input_text:"Wrong input",status_sending:"Sending form...",status_success:"Form sent successfuly",status_error:"Server encountered an error",},form:{novalidate:!0,form:null,status:null,},input:{input_container_class:'.input',correct_input_class:formObjPrefix+'correct-input',wrong_input_class:formObjPrefix+'wrong-input',fields:[],agreements:[],regex_table:{'alpha':/^.*$/,'phone':/(\(?(\+|00)?48\)?([ -]?))?(\d{3}[ -]?\d{3}[ -]?\d{3})|([ -]?\d{2}[ -]?\d{3}[ -]?\d{2}[ -]?\d{2})/,'email':/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,'name':/^[a-zA-Z\u00E0\u00E1\u00E2\u00E4\u00E3\u00E5\u0105\u010D\u0107\u0119\u00E8\u00E9\u00EA\u00EB\u0117\u012F\u00EC\u00ED\u00EE\u00EF\u0142\u0144\u00F2\u00F3\u00F4\u00F6\u00F5\u00F8\u00F9\u00FA\u00FB\u00FC\u0173\u016B\u00FF\u00FD\u017C\u017A\u00F1\u00E7\u010D\u015B\u0161\u015B\u017E\u00C0\u00C1\u00C2\u00C4\u00C3\u00C5\u0104\u0106\u010C\u0116\u0118\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u012E\u0141\u0143\u00D2\u00D3\u00D4\u00D6\u00D5\u00D8\u00D9\u00DA\u00DB\u00DC\u0172\u016A\u0178\u00DD\u017B\u0179\u00D1\u00DF\u00C7\u0152\u00C6\u010C\u015A\u0160\u015A\u017D\u2202\u00F0 ,.'-]+$/,},data_dictionary:{}},callbacks:{onSend:{}}};function Plugin(element,options){this.element=element;this.settings=$.extend(!0,{},defaults,options);this._defaults=defaults;this._name=pluginName;this._nameLower=pluginNameLower;this._objPrefix=formObjPrefix;this._inputAllMask=inputAllMask;this._methods=methods;this.html=$('html');this.form={obj:null,status:null,};this._methods.init(this)}
    const methods={init:function(instance){instance._methods.initForm(instance)},initForm:function(instance){instance._methods.initForm_generate_defaults(instance);instance._methods.initForm_generate_content(instance);instance._methods.formAppendEventListeners(instance);instance._methods.formApplyMisc(instance)},initForm_generate_defaults:function(instance){instance.form.jq_obj=$(instance.element);instance.form.status=instance.settings.form.status;if(instance.settings.form.novalidate){instance.form.jq_obj.attr('novalidate','novalidate')}
            if(!instance.settings.api.url){instance.settings.api.url=instance.form.jq_obj.attr('action')}
            if(!instance.settings.data.form_method){instance.settings.data.form_method=instance.form.jq_obj.attr('method')}},initForm_generate_content:function(instance){let all_fields=instance.form.jq_obj.find('[data-'+instance._nameLower+']');let fields=[];let agreements=[];let status=$([]);all_fields.each(function(){let $this=$(this);let data=$this.data(instance._nameLower);if(data){data.obj=$this;if(data.element_type==='field'){fields.push(data)}
        else if(data.element_type==='agreement'){agreements.push(data)}
        else if(data.element_type==='status'){status=status.add($this)}}});if(!instance.settings.input.fields.length){instance.settings.input.fields=fields}
            if(!instance.settings.input.agreements.length){instance.settings.input.agreements=agreements}
            if(!instance.form.status){instance.form.status=status}
            instance._methods.initForm_generate_fields(instance);instance._methods.initForm_generate_agreements(instance)},initForm_generate_fields:function(instance){let fields_length=instance.settings.input.fields.length;for(let i=0;i<fields_length;i++){let $this=instance.settings.input.fields[i].obj;let new_field=instance._methods.initForm_generate_single_field(instance,$this,instance.settings.input.fields[i]);instance.settings.input.fields[i]=new_field}},initForm_generate_single_field:function(instance,_ele,_options){let defaults={};let settings=$.extend({},defaults,_options);let $this=_ele;let field_data=$this.data(instance._nameLower);let input_container='';let input_type='';let field_data_type='';let wrong_input_text='';if(field_data){input_container=$this.closest(instance.settings.input.input_container_class);input_type=$this.attr('type');field_data_type=field_data.field_data_type;wrong_input_text=field_data.wrong_input_text;if(!wrong_input_text){wrong_input_text=instance.settings.text_vars.wrong_input_text}}
            if(!field_data_type){switch(input_type){case 'tel':field_data_type='phone';break;case 'email':field_data_type='email';break;default:field_data_type='alpha';break}}
            let new_field={obj:$this,container:input_container,label:input_container.find('label'),type:input_type,field_data_type:field_data_type,max_length:$this.attr('max-length'),required:$this.prop('required'),wrong_input_text:wrong_input_text,};if(settings){new_field=$.extend({},new_field,settings)}
            return new_field},initForm_generate_agreements:function(instance){let fields_length=instance.settings.input.agreements.length;for(let i=0;i<fields_length;i++){let $this=instance.settings.input.agreements[i].obj;let new_field=instance._methods.initForm_generate_single_agreement_field(instance,$this,instance.settings.input.agreements[i]);instance.settings.input.agreements[i]=new_field}},initForm_generate_single_agreement_field:function(instance,_ele,_options){let defaults={};let settings=$.extend({},defaults,_options);let $this=_ele;let field_data=$this.data(instance._nameLower);let input_container='';let input_type='';let field_data_type='';let wrong_input_text='';if(field_data){input_container=$this.closest(instance.settings.input.input_container_class);input_type=$this.attr('type');field_data_type=field_data.field_data_type;wrong_input_text=field_data.wrong_input_text;if(!wrong_input_text){wrong_input_text=instance.settings.text_vars.wrong_input_text}}
            if(!field_data_type){switch(input_type){case 'checkbox':field_data_type='checkbox';break;case 'radio':field_data_type='radio';break;default:field_data_type='';break}}
            let new_field={obj:$this,container:input_container,label:input_container.find('label'),type:input_type,field_data_type:field_data_type,required:$this.prop('required'),wrong_input_text:wrong_input_text,};if(settings){new_field=$.extend({},new_field,settings)}
            return new_field},formAppendEventListeners:function(instance){for(let i=0;i<instance.settings.input.fields.length;i++){let field=instance.settings.input.fields[i];field.obj.data(instance._objPrefix+'index',i);field.obj.on('input',function(e){let $this=$(this);let index=$this.data(instance._objPrefix+'index');let validated=instance._methods.ValidateForm(instance,[instance.settings.input.fields[index]],{append_status:!1,focus_first_wrong:!1,clear_status_if_empty:!0});if(validated){console.log('input validation successful')}
            instance._methods.formCheckIfInputHasContent(instance,$this);return!1});instance._methods.formCheckIfInputHasContent(instance,field.obj)}
            for(let i=0;i<instance.settings.input.agreements.length;i++){let agreement=instance.settings.input.agreements[i];agreement.obj.data(instance._objPrefix+'index',i);agreement.obj.on('change',function(e){let index=$(this).data(instance._objPrefix+'index');let validated=instance._methods.ValidateForm(instance,[instance.settings.input.agreements[index]],{append_status:!1,focus_first_wrong:!1,clear_status_if_empty:!0});if(validated){console.log('agreement validation successful')}
                return!1})}
            instance.form.jq_obj.on('submit',function(e){if(instance.settings.callbacks.onSend.before&&instance.settings.callbacks.onSend.before.function&&$.isFunction(instance.settings.callbacks.onSend.before.function)){instance.settings.callbacks.onSend.before.function.apply(instance.settings.callbacks.onSend.before.this,[$.extend(!0,{},instance.settings.callbacks.onSend.before.parameters)])}
                let status=instance._methods.SendData(instance,{callback:{success:{function:instance._methods.SendDataReturn,this:instance,parameters:[instance,{reset_input:!0,message:instance.settings.text_vars.status_success,style:'success'}]},error:{function:instance._methods.SendDataReturn,this:instance,parameters:[instance,{reset_input:!1,message:instance.settings.text_vars.status_error,style:'error'}]}}});console.log('Submit form status: '+status.success+', '+status.message);return!1})},formCheckIfInputHasContent:function(instance,_input){if(_input.val()){_input.addClass(instance._objPrefix+'has-content')}else{_input.removeClass(instance._objPrefix+'has-content')}},formApplyMisc:function(instance){let inputs=instance.form.jq_obj.find(instance._inputAllMask);console.log('js input mask: '+(typeof $.fn.inputmask!=='undefined'));if(typeof $.fn.inputmask!=='undefined'){let input_masked_items=inputs.filter('input[type="tel"], .jsm--phone');let phones_mask=["###-###-###","## ###-##-##"];console.log('js input mask || masked items: ');console.log(input_masked_items);input_masked_items.inputmask({mask:phones_mask,greedy:!1,definitions:{'#':{validator:"[0-9]",cardinality:1}}})}},ValidateField:function(instance,_field,options){let defaults={};let settings=$.extend({},defaults,options);let field=_field;let $this=field.obj;let is_valid=!0;let is_empty=null;let $this_val;if(field.type==='checkbox'){$this_val=$this.prop('checked');if(field.required===!0){if(!$this_val){is_valid=!1}}
            is_empty=!$this_val}
        else if(field.type==='select'){$this_val=$this.val();if(field.required===!0){if(!$this_val){is_valid=!1}}
            is_empty=!$this_val}
        else{$this_val=$this.val();if(field.required===!0||$this_val){let regex_table=instance.settings.input.regex_table;if(field.field_data_type&&field.field_data_type in regex_table){let regex=regex_table[field.field_data_type];if(!regex.test($this_val)){is_valid=!1}}else{is_valid=!1}
            is_valid=is_valid&&$this_val}
            is_empty=!$this_val}
            return{is_valid:is_valid,is_empty:is_empty,field:field}},ValidateForm:function(instance,_fields,options){let defaults={append_status:!0,focus_first_wrong:!0,fade_duration:300,clear_status_only:!1,clear_status_if_empty:!1,};let settings=$.extend({},defaults,options);let fields=_fields;let is_valid=!0;let wrong_inputs=[];for(let i=0;i<fields.length;i++){let field=fields[i];let field_valid=instance._methods.ValidateField(instance,field);let $this=field.obj;let $this_container=field.container;let old_obj=$this_container.find('.'+instance._objPrefix+'status');if(settings.append_status){old_obj.remove()}else{old_obj.fadeOut(settings.fade_duration,function(){old_obj.remove()})}
            if(settings.clear_status_only||(settings.clear_status_if_empty&&field_valid.is_empty===!0)){$this.removeClass(instance.settings.input.correct_input_class);$this_container.removeClass(instance.settings.input.correct_input_class);$this.removeClass(instance.settings.input.wrong_input_class);$this_container.removeClass(instance.settings.input.wrong_input_class)}else{if(field_valid.is_valid){$this.removeClass(instance.settings.input.wrong_input_class);$this_container.removeClass(instance.settings.input.wrong_input_class);$this.addClass(instance.settings.input.correct_input_class);$this_container.addClass(instance.settings.input.correct_input_class)}else{$this.removeClass(instance.settings.input.correct_input_class);$this_container.removeClass(instance.settings.input.correct_input_class);$this.addClass(instance.settings.input.wrong_input_class);$this_container.addClass(instance.settings.input.wrong_input_class);wrong_inputs.push({field:field,message:''});if(settings.append_status){let $wrong_input_obj=$('<span class="'+instance._objPrefix+'status"></span>');$wrong_input_obj.text(field.wrong_input_text);$wrong_input_obj.hide();field.status=$wrong_input_obj.appendTo($this_container);$wrong_input_obj.fadeIn(settings.fade_duration)}
                is_valid=!1}}}
            if(settings.focus_first_wrong&&wrong_inputs.length>0){wrong_inputs=instance._methods.objSortByPositionInDOM(wrong_inputs,'field','obj');wrong_inputs[0].field.obj.focus()}
            return is_valid},SendDataReturn:function(instance,options){let defaults={reset_input:!0,message:'',style:'',};let settings=$.extend({},defaults,options);if(settings.reset_input){instance._methods.ResetInput(instance,{clear_status_only:!0})}
            instance._methods.StatusClear(instance);instance._methods.StatusAdd(instance,settings.message,{style:settings.style})},ResetInput:function(instance,options){let defaults={clear_status_only:!1,};let settings=$.extend({},defaults,options);let form=instance.form.jq_obj;form[0].reset();instance._methods.ValidateForm(instance,instance.settings.input.fields,{append_status:!1,focus_first_wrong:!1,clear_status_only:settings.clear_status_only});instance._methods.ValidateForm(instance,instance.settings.input.agreements,{append_status:!1,focus_first_wrong:!1,clear_status_only:settings.clear_status_only})},SendData:function(instance,options){let status={success:!1,message:'SendData: Error (Default)'};let defaults={url:instance.settings.api.url,api_custom:instance.settings.api.custom,data:instance.form.jq_obj.serialize(),data_dictionary:instance.settings.input.data_dictionary,type:instance.settings.data.form_method,success_param:instance.settings.api.param.success,return_param:instance.settings.api.param.message,status_sending_text:instance.settings.text_vars.status_sending,send_headers:instance.settings.data.send_headers};let settings=$.extend(!0,{},defaults,options);instance._methods.StatusClear(instance);let validated_fields=instance._methods.ValidateForm(instance,instance.settings.input.fields);let validated_agreements=instance._methods.ValidateForm(instance,instance.settings.input.agreements);let validated=validated_fields&&validated_agreements;if(validated){console.log('Validation successful');console.log('Attempting to send data...');instance._methods.StatusClear(instance);instance._methods.StatusAdd(instance,settings.status_sending_text,{});status=instance._methods.SendDataAjax(instance,settings)}else{status={success:!1,message:'SendData: Error (Validation)'}}
            return status},SendDataAjax:function(instance,options){let status={success:!1,message:'SendDataAjax: Error (Default)'};let defaults={url:'/',type:'POST',api_custom:[],data:'',data_dictionary:{},success_param:{name:'result',value:'success'},return_param:'message',send_headers:!0,};let settings=$.extend(!0,{},defaults,options);if(settings.api_custom){let api_custom_length=settings.api_custom.length;let custom_data_string='';if(settings.data.length>0){custom_data_string+='&'}
            for(let i=0;i<api_custom_length;i++){custom_data_string+=settings.api_custom[i].name+'='+settings.api_custom[i].value;if(i<api_custom_length-1){custom_data_string+='&'}}
            settings.data+=encodeURI(custom_data_string)}
            let data_dictionary_keys=Object.keys(settings.data_dictionary);for(let i=0;i<data_dictionary_keys.length;i++){let regex=settings.data_dictionary[data_dictionary_keys[i]];console.log(data_dictionary_keys[i]+' > '+regex);settings.data=settings.data.replace(data_dictionary_keys[i],regex)}
            console.log(settings);if(instance.settings.status.ajax_processing){status={success:!1,message:'SendDataAjax: Error (Processing...)'}}else{instance.settings.status.ajax_processing=!0;status={success:!0,message:'SendDataAjax: Success (Got into ajax)'};if(settings.send_headers){$.ajaxSetup({headers:{'Content-Type':'application/x-www-form-urlencoded; charset=UTF-8','X-Requested-With':'XMLHttpRequest'}})}
                $.ajax({url:settings.url,type:settings.type,data:settings.data,enctype:'multipart/form-data',dataType:'json',processData:!1,success:function(data){let response_success=!1;let return_message;console.log(data);if(data[settings.return_param]){if($.isArray(data[settings.return_param])){for(let index in data[settings.return_param]){console.log(data[settings.return_param][index])}}
                        console.log('API status: '+data.status);console.log('API message: ');console.log(data[settings.return_param])}
                        if($.isArray(data[settings.return_param])){return_message=data[settings.return_param].join(', ')}else{return_message=data[settings.return_param]}
                        console.log(return_message);if(data[settings.success_param.name]){if(data[settings.success_param.name]===settings.success_param.value){status={success:!0,message:'Success (API x:200)'};response_success=!0}else{response_success=!1}}else{response_success=!1}
                        if(response_success){if(settings.callback.success&&settings.callback.success.function&&$.isFunction(settings.callback.success.function)){settings.callback.success.function.apply(settings.callback.success.instance,settings.callback.success.parameters)}
                            if(instance.settings.callbacks.onSend.success&&instance.settings.callbacks.onSend.success.function&&$.isFunction(instance.settings.callbacks.onSend.success.function)){instance.settings.callbacks.onSend.success.function.apply(instance.settings.callbacks.onSend.success.this,[$.extend(!0,{},data,instance.settings.callbacks.onSend.success.parameters)])}}else{if(settings.callback.error&&settings.callback.error.function&&$.isFunction(settings.callback.error.function)){settings.callback.error.function.apply(settings.callback.error.this,settings.callback.error.parameters)}
                            if(instance.settings.callbacks.onSend.error&&instance.settings.callbacks.onSend.error.function&&$.isFunction(instance.settings.callbacks.onSend.error.function)){instance.settings.callbacks.onSend.error.function.apply(instance.settings.callbacks.onSend.error.this,[$.extend(!0,{},data,instance.settings.callbacks.onSend.error.parameters)])}
                            if(instance.settings.status.response_from_api_visible&&return_message){instance._methods.StatusAdd(instance,return_message,{style:'error'})}}
                        instance.settings.status.ajax_processing=!1},error:function(data){console.log('API status: '+data.status);console.log('API message: ');console.log(data[settings.return_param]);status={success:!1,message:'Error (API x:0)'};instance.settings.status.ajax_processing=!1;if(settings.callback.error&&settings.callback.error.function&&$.isFunction(settings.callback.error.function)){settings.callback.error.function.apply(settings.callback.error.this,settings.callback.error.parameters)}
                        if(instance.settings.callbacks.onSend.error&&instance.settings.callbacks.onSend.error.function&&$.isFunction(instance.settings.callbacks.onSend.error.function)){instance.settings.callbacks.onSend.error.function.apply(instance.settings.callbacks.onSend.error.this,[$.extend(!0,{},data,instance.settings.callbacks.onSend.error.parameters)])}}})}
            return status},StatusAdd:function(instance,_message,options){let defaults={fade_duration:300,style:''};let settings=$.extend({},defaults,options);let message=$('<p></p>');message.text(_message);message.appendTo(instance.form.status);message.hide();if(settings.style==='success'){instance._methods.StatusClearStyle(instance);instance.form.status.addClass('success')}else if(settings.style==='error'){instance._methods.StatusClearStyle(instance);instance.form.status.addClass('error')}
            message.fadeIn(settings.fade_duration)},StatusClearStyle:function(instance){instance.form.status.removeClass('success error')},StatusClear:function(instance){instance._methods.StatusClearStyle(instance);instance.form.status.empty()},objSortByPositionInDOM:function(input,attr,attr2){let _input=input;let output;if(attr&&attr2){output=_input.sort(function(a,b){if(a[attr][attr2][0]===b[attr][attr2][0])return 0;if(!a[attr][attr2][0].compareDocumentPosition){return a[attr][attr2][0].sourceIndex-b[attr][attr2][0].sourceIndex}
            if(a[attr][attr2][0].compareDocumentPosition(b[attr][attr2][0])&2){return 1}
            return-1})}
        else if(attr){output=_input.sort(function(a,b){if(a[attr][0]===b[attr][0])return 0;if(!a[attr][0].compareDocumentPosition){return a[attr][0].sourceIndex-b[attr][0].sourceIndex}
            if(a[attr][0].compareDocumentPosition(b[attr][0])&2){return 1}
            return-1})}else{output=_input.sort(function(a,b){if(a[0]===b[0])return 0;if(!a[0].compareDocumentPosition){return a[0].sourceIndex-b[0].sourceIndex}
            if(a[0].compareDocumentPosition(b[0])&2){return 1}
            return-1})}
            return output},};$.fn[pluginName]=function(options){let instances=[];this.each(function(){if(!$.data(this,"plugin_"+pluginName)){let instance=new Plugin(this,options);$.data(this,"plugin_"+pluginName,instance);instances.push(instance)}
        if(typeof options==='string'){const args=Array.prototype.slice.call(arguments,1);data[options].apply(data,args)}});if(instances.length===1){return instances[0]}
        return null}})(jQuery,window,document)